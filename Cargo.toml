[package]
name = "nmox-server"
version = "3.0.0"
edition = "2021"
authors = ["NMOX Team"]
license = "MIT"
description = "NMOX Server Rust/WebAssembly components"
repository = "https://github.com/nmox/nmox-server"
keywords = ["nmox", "webassembly", "wasm", "web", "framework"]
categories = ["web-programming", "wasm"]

[workspace]
members = [
    "x/lib/rust",
    "x/lib/wasm",
]

[dependencies]
# Core dependencies
tokio = { version = "1.35", features = ["full"] }
axum = { version = "0.7", features = ["ws", "macros"] }
tower = { version = "0.4", features = ["full"] }
tower-http = { version = "0.5", features = ["fs", "cors", "compression-gzip"] }
hyper = { version = "1.0", features = ["full"] }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
toml = "0.8"

# WebAssembly
wasm-bindgen = "0.2"
wasm-bindgen-futures = "0.4"
web-sys = "0.3"

# Database
sqlx = { version = "0.7", features = ["runtime-tokio-rustls", "postgres", "sqlite", "migrate"], optional = true }

# Logging and tracing
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# Utils
uuid = { version = "1.6", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde"] }
once_cell = "1.19"
async-trait = "0.1"

# Authentication
jsonwebtoken = { version = "9.2", optional = true }
bcrypt = { version = "0.15", optional = true }

# Performance
dashmap = "5.5"
parking_lot = "0.12"

[dev-dependencies]
criterion = "0.5"
proptest = "1.4"
quickcheck = "1.0"
mockito = "1.2"
tempfile = "3.8"

[features]
default = ["database", "auth"]
database = ["sqlx"]
auth = ["jsonwebtoken", "bcrypt"]
full = ["database", "auth"]

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"
strip = true

[profile.release-wasm]
inherits = "release"
opt-level = "z"  # Optimize for size

[profile.dev]
opt-level = 0
debug = true

[profile.bench]
inherits = "release"
debug = true

[[bin]]
name = "nmox-server"
path = "x/lib/rust/src/main.rs"

[[bench]]
name = "x_object"
harness = false

[package.metadata.wasm-pack]
"wasm-opt" = ["-Os"]